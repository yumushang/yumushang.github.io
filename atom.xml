<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yumushang.github.io</id>
    <title>生活应你而火热</title>
    <updated>2020-12-29T07:38:56.916Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yumushang.github.io"/>
    <link rel="self" href="https://yumushang.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://yumushang.github.io/images/avatar.png</logo>
    <icon>https://yumushang.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 生活应你而火热</rights>
    <entry>
        <title type="html"><![CDATA[ORACLE 表,视图,物化视图 查询问题]]></title>
        <id>https://yumushang.github.io/post/oracle-biao-shi-tu-wu-hua-shi-tu/</id>
        <link href="https://yumushang.github.io/post/oracle-biao-shi-tu-wu-hua-shi-tu/">
        </link>
        <updated>2020-12-29T03:10:18.000Z</updated>
        <content type="html"><![CDATA[<h2 id="问题-ora-01652无法通过128-在表空间hatemp1218中扩展temp">问题 ORA-01652:无法通过128 (在表空间HATEMP1218中)扩展temp</h2>
<p>最近在做项目时，需要查询另一个数据库的视图和表。用到dblink远程连接数据库进行查询。dblink查询需要在表或者视图后加@xxxxx（数据库用户名），为了方便在本地开发与部署，我先将需要查询的视图与表数据存到本地表中，而在生产环境中使用创建同名视图的方式，如下：</p>
<pre><code>create view xxxx
as 
SELECT * FROM XXXX@XXXXX
</code></pre>
<p>这样使得本地与生产环境的sql都不用加上@xxxxx。</p>
<p>在开发完成后，部署到正式环境测试时，发现了问题。<br>
在本地没问题的sql到生产环境中报<br>
ORA-01652:无法通过128 (在表空间HATEMP1218中)扩展temp<br>
<img src="https://yumushang.github.io/post-images/1609212399323.png" alt="" loading="lazy"></p>
<p>google了这个报错信息是因为临时表空间不足，我调整了临时表空间到40G后，发现还是报一样的错误，这就不对劲了，本地数据库的临时表空间只有1个G，也一样能查询啊。<br>
我先是猜测数据量级的问题，可能是因为生产环境的数据量太大了。所以我做了第一个操作，将视图转为物化视图，并且只拉取近两年的数据。如下：</p>
<pre><code>CREATE MATERIALIZED VIEW xxxx
REFRESH FORCE ON DEMAND
START WITH TO_DATE('24-12-2020 02:00:00', 'DD-MM-YYYY HH24:MI:SS') NEXT TO_DATE(CONCAT (TO_CHAR(  SYSDATE + 1 , 'DD-MM-YYYY' ), '02:00:00' ), 'DD-MM-YYYY HH24:MI:SS' )  
AS
SELECT * from  xxxx@xxxxx
where create_time between sysdate-366-366 and sysdate;
</code></pre>
<p>物化视图与视图不同，视图只存储SQL语句，物化视图不止存储语句，还将数据存起来。<br>
一波操作之后，我又执行了一下报错的SQL，等待了10分钟后，语句还是报错了。<br>
到这我开始怀疑自己了，我将语句分别在生产环境与本地环境查看了执行计划。<br>
发现两个执行计划不同，生产环境的基数已经飙升到了需要科学计数法了，本地环境却只是百万级。<br>
我发现就是一个三表联查导致的基数飙升，写法如下</p>
<pre><code>select xxx from a,b,c where a.id = b.id and a.id = c.id
</code></pre>
<p>这个直接导致生产环境下的基数飙升。这样只需要执行order by 操作，就会直接导致ORA-01652的错误。但是这个在本地却是正常的。这个时候就是排除法了，数据量相差不多，这个时候区别就是本地是三个表，而生产环境是三个物化视图。<br>
这个时候我还是不相信是因为视图导致的这个问题。<br>
我将上面的SQL换成了 left join 写法，如下：</p>
<pre><code>select xxx from a
left join b on a.id = b.id
left join c on c.id = a.id
</code></pre>
<p>我继续查看执行计划，这个基数却是正常了！为什么？<br>
我又复习了一下逗号与left join 查询的区别。逗号其实就是inner join 。果然我将上面的left 换成 inner 又出现了基数飙升。这个时候我有两条路，一个是将SQL语句换成left join 写法，另一个就是继续排除法，确定是不是视图的原因导致的这个问题。<br>
我选择了继续。。。<br>
我将物化视图直接 creat select 成了表。继续执行报错的SQL ，不出所料，正常了。<br>
这个问题至此也就解决了，将雾化视图转为真正的表就可以了。</p>
<h2 id="反思">反思：</h2>
<p>物化视图虽然将数据存储了，但是和表还是有所区别。视图与表的查询策略还是不一样的，具体哪里不一样，表是怎么查的，视图是如何查的，这个问题我暂时没有答案，只有通过不断的学习，实践才能明白吧。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://yumushang.github.io/post/hello-gridea/</id>
        <link href="https://yumushang.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>